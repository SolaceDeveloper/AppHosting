{"version":3,"file":"node_modules_pnpm_react-navigation_material-bottom-tabs_6_2_5__react-navigation_native_6_0_14-d8cc9d1.chunk.bundle","mappings":"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","sources":["webpack:///../../node_modules/.pnpm/@react-navigation+material-bottom-tabs@6.2.5_@react-navigation+native@6.0.14_react-native-pap_aa3fqwy3s3bo3iotiureecewm4/node_modules/@react-navigation/material-bottom-tabs/src/index.tsx","webpack:///../../node_modules/.pnpm/@react-navigation+material-bottom-tabs@6.2.5_@react-navigation+native@6.0.14_react-native-pap_aa3fqwy3s3bo3iotiureecewm4/node_modules/@react-navigation/material-bottom-tabs/src/navigators/createMaterialBottomTabNavigator.tsx","webpack:///../../node_modules/.pnpm/@react-navigation+material-bottom-tabs@6.2.5_@react-navigation+native@6.0.14_react-native-pap_aa3fqwy3s3bo3iotiureecewm4/node_modules/@react-navigation/material-bottom-tabs/src/views/MaterialBottomTabView.tsx"],"sourcesContent":["/**\n * Navigators\n */\nexport { default as createMaterialBottomTabNavigator } from './navigators/createMaterialBottomTabNavigator';\n\n/**\n * Views\n */\nexport { default as MaterialBottomTabView } from './views/MaterialBottomTabView';\n\n/**\n * Types\n */\nexport type {\n  MaterialBottomTabNavigationEventMap,\n  MaterialBottomTabNavigationOptions,\n  MaterialBottomTabNavigationProp,\n  MaterialBottomTabScreenProps,\n} from './types';\n","import {\n  createNavigatorFactory,\n  DefaultNavigatorOptions,\n  ParamListBase,\n  TabActionHelpers,\n  TabNavigationState,\n  TabRouter,\n  TabRouterOptions,\n  useNavigationBuilder,\n} from '@react-navigation/native';\nimport * as React from 'react';\n\nimport type {\n  MaterialBottomTabNavigationConfig,\n  MaterialBottomTabNavigationEventMap,\n  MaterialBottomTabNavigationOptions,\n} from '../types';\nimport MaterialBottomTabView from '../views/MaterialBottomTabView';\n\ntype Props = DefaultNavigatorOptions<\n  ParamListBase,\n  TabNavigationState<ParamListBase>,\n  MaterialBottomTabNavigationOptions,\n  MaterialBottomTabNavigationEventMap\n> &\n  TabRouterOptions &\n  MaterialBottomTabNavigationConfig;\n\nfunction MaterialBottomTabNavigator({\n  id,\n  initialRouteName,\n  backBehavior,\n  children,\n  screenListeners,\n  screenOptions,\n  ...rest\n}: Props) {\n  const { state, descriptors, navigation, NavigationContent } =\n    useNavigationBuilder<\n      TabNavigationState<ParamListBase>,\n      TabRouterOptions,\n      TabActionHelpers<ParamListBase>,\n      MaterialBottomTabNavigationOptions,\n      MaterialBottomTabNavigationEventMap\n    >(TabRouter, {\n      id,\n      initialRouteName,\n      backBehavior,\n      children,\n      screenListeners,\n      screenOptions,\n    });\n\n  return (\n    <NavigationContent>\n      <MaterialBottomTabView\n        {...rest}\n        state={state}\n        navigation={navigation}\n        descriptors={descriptors}\n      />\n    </NavigationContent>\n  );\n}\n\nexport default createNavigatorFactory<\n  TabNavigationState<ParamListBase>,\n  MaterialBottomTabNavigationOptions,\n  MaterialBottomTabNavigationEventMap,\n  typeof MaterialBottomTabNavigator\n>(MaterialBottomTabNavigator);\n","import { SafeAreaProviderCompat } from '@react-navigation/elements';\nimport {\n  CommonActions,\n  Link,\n  ParamListBase,\n  Route,\n  TabNavigationState,\n  useLinkBuilder,\n  useTheme,\n} from '@react-navigation/native';\nimport * as React from 'react';\nimport { Platform, StyleSheet, Text } from 'react-native';\nimport {\n  BottomNavigation,\n  DarkTheme,\n  DefaultTheme,\n  useTheme as usePaperTheme,\n} from 'react-native-paper';\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\n\nimport type {\n  MaterialBottomTabDescriptorMap,\n  MaterialBottomTabNavigationConfig,\n  MaterialBottomTabNavigationHelpers,\n} from '../types';\n\ntype Props = MaterialBottomTabNavigationConfig & {\n  state: TabNavigationState<ParamListBase>;\n  navigation: MaterialBottomTabNavigationHelpers;\n  descriptors: MaterialBottomTabDescriptorMap;\n};\n\ntype Scene = { route: { key: string } };\n\n// Optionally require vector-icons referenced from react-native-paper:\n// https://github.com/callstack/react-native-paper/blob/4b26429c49053eaa4c3e0fae208639e01093fa87/src/components/MaterialCommunityIcon.tsx#L14\nlet MaterialCommunityIcons: React.ComponentType<\n  React.ComponentProps<\n    typeof import('react-native-vector-icons/MaterialCommunityIcons').default\n  >\n>;\n\ntry {\n  // Optionally require vector-icons\n  MaterialCommunityIcons =\n    require('react-native-vector-icons/MaterialCommunityIcons').default;\n} catch (e: any) {\n  let isErrorLogged = false;\n\n  // Fallback component for icons\n  MaterialCommunityIcons = ({\n    name,\n    color,\n    size,\n    selectionColor: _0,\n    onLayout: _1,\n    ...rest\n  }) => {\n    if (!isErrorLogged) {\n      if (\n        !/(Cannot find module|Module not found|Cannot resolve module)/.test(\n          e.message\n        )\n      ) {\n        console.error(e);\n      }\n\n      console.warn(\n        `Tried to use the icon '${name}' in a component from '@react-navigation/material-bottom-tabs', but 'react-native-vector-icons/MaterialCommunityIcons' could not be loaded.`,\n        `To remove this warning, try installing 'react-native-vector-icons' or use another method to specify icon: https://reactnavigation.org/docs/material-bottom-tab-navigator/#tabbaricon.`\n      );\n\n      isErrorLogged = true;\n    }\n\n    return (\n      <Text\n        {...rest}\n        style={[\n          styles.icon,\n          {\n            color: typeof color !== 'number' ? color : undefined,\n            fontSize: size,\n          },\n        ]}\n      >\n        □\n      </Text>\n    );\n  };\n}\n\nfunction MaterialBottomTabViewInner({\n  state,\n  navigation,\n  descriptors,\n  ...rest\n}: Props) {\n  const insets = useSafeAreaInsets();\n  const { dark, colors } = useTheme();\n  const paperTheme = usePaperTheme();\n\n  const buildLink = useLinkBuilder();\n\n  const t =\n    // If the theme from React Navigation and Paper match, then user the customized theme\n    // Otherwise fallback to the matching default theme from Paper\n    dark === paperTheme.dark ? paperTheme : dark ? DarkTheme : DefaultTheme;\n\n  const theme = React.useMemo(() => {\n    return {\n      ...t,\n      colors: {\n        ...t.colors,\n        ...colors,\n        surface: colors.card,\n      },\n    };\n  }, [colors, t]);\n\n  return (\n    <BottomNavigation\n      {...rest}\n      theme={theme}\n      navigationState={state}\n      onIndexChange={(index: number) =>\n        navigation.dispatch({\n          ...CommonActions.navigate({\n            name: state.routes[index].name,\n            merge: true,\n          }),\n          target: state.key,\n        })\n      }\n      renderScene={({ route }) => descriptors[route.key].render()}\n      renderTouchable={\n        Platform.OS === 'web'\n          ? ({\n              onPress,\n              route,\n              accessibilityRole: _0,\n              borderless: _1,\n              centered: _2,\n              rippleColor: _3,\n              style,\n              ...rest\n            }) => {\n              return (\n                <Link\n                  {...rest}\n                  // @ts-expect-error: to could be undefined, but it doesn't affect functionality\n                  to={buildLink(route.name, route.params)}\n                  accessibilityRole=\"link\"\n                  onPress={(e: any) => {\n                    if (\n                      !(e.metaKey || e.altKey || e.ctrlKey || e.shiftKey) && // ignore clicks with modifier keys\n                      (e.button == null || e.button === 0) // ignore everything but left clicks\n                    ) {\n                      e.preventDefault();\n                      onPress?.(e);\n                    }\n                  }}\n                  style={[styles.touchable, style]}\n                />\n              );\n            }\n          : undefined\n      }\n      renderIcon={({ route, focused, color }) => {\n        const { options } = descriptors[route.key];\n\n        if (typeof options.tabBarIcon === 'string') {\n          return (\n            <MaterialCommunityIcons\n              name={options.tabBarIcon}\n              color={color}\n              size={24}\n              style={styles.icon}\n            />\n          );\n        }\n\n        if (typeof options.tabBarIcon === 'function') {\n          return options.tabBarIcon({ focused, color });\n        }\n\n        return null;\n      }}\n      getLabelText={({ route }: Scene) => {\n        const { options } = descriptors[route.key];\n\n        return options.tabBarLabel !== undefined\n          ? options.tabBarLabel\n          : options.title !== undefined\n          ? options.title\n          : (route as Route<string>).name;\n      }}\n      getColor={({ route }) => descriptors[route.key].options.tabBarColor}\n      getBadge={({ route }) => descriptors[route.key].options.tabBarBadge}\n      getAccessibilityLabel={({ route }) =>\n        descriptors[route.key].options.tabBarAccessibilityLabel\n      }\n      getTestID={({ route }) => descriptors[route.key].options.tabBarTestID}\n      onTabPress={({ route, preventDefault }) => {\n        const event = navigation.emit({\n          type: 'tabPress',\n          target: route.key,\n          canPreventDefault: true,\n        });\n\n        if (event.defaultPrevented) {\n          preventDefault();\n        }\n      }}\n      safeAreaInsets={insets}\n    />\n  );\n}\n\nexport default function MaterialBottomTabView(props: Props) {\n  return (\n    <SafeAreaProviderCompat>\n      <MaterialBottomTabViewInner {...props} />\n    </SafeAreaProviderCompat>\n  );\n}\n\nconst styles = StyleSheet.create({\n  icon: {\n    backgroundColor: 'transparent',\n  },\n  touchable: {\n    display: 'flex',\n    justifyContent: 'center',\n  },\n});\n"],"names":["_createMaterialBottomTabNavigator","_interopRequireDefault","require","_MaterialBottomTabView","_native","obj","nodeInterop","__esModule","default","cache","_getRequireWildcardCache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_interopRequireWildcard","_jsxRuntime","_excluded","WeakMap","cacheBabelInterop","cacheNodeInterop","exports","createNavigatorFactory","_ref","id","initialRouteName","backBehavior","children","screenListeners","screenOptions","rest","_objectWithoutProperties2","_useNavigationBuilder","useNavigationBuilder","TabRouter","state","descriptors","navigation","NavigationContent","jsx","assign","props","_elements","SafeAreaProviderCompat","MaterialBottomTabViewInner","MaterialCommunityIcons","React","_reactNative","_reactNativePaper","_reactNativeSafeAreaContext","_excluded2","_excluded3","e","isErrorLogged","name","color","size","selectionColor","onLayout","test","message","console","error","warn","Text","style","styles","icon","undefined","fontSize","_ref2","insets","useSafeAreaInsets","_useTheme","useTheme","dark","colors","paperTheme","usePaperTheme","buildLink","useLinkBuilder","t","DarkTheme","DefaultTheme","theme","useMemo","surface","card","BottomNavigation","navigationState","onIndexChange","index","dispatch","CommonActions","navigate","routes","merge","target","renderScene","_ref3","route","render","renderTouchable","Platform","OS","_ref4","onPress","accessibilityRole","borderless","centered","rippleColor","Link","to","params","metaKey","altKey","ctrlKey","shiftKey","button","preventDefault","touchable","renderIcon","_ref5","focused","options","tabBarIcon","getLabelText","_ref6","tabBarLabel","title","getColor","_ref7","tabBarColor","getBadge","_ref8","tabBarBadge","getAccessibilityLabel","_ref9","tabBarAccessibilityLabel","getTestID","_ref10","tabBarTestID","onTabPress","_ref11","emit","type","canPreventDefault","defaultPrevented","safeAreaInsets","StyleSheet","create","backgroundColor","display","justifyContent"],"sourceRoot":""}