{"version":3,"file":"vendors-node_modules_pnpm_react-navigation_native-stack_6_9_2__react-navigation_native_6_0_14-a46118.chunk.bundle","mappings":"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","sources":["webpack:///../../node_modules/.pnpm/@react-navigation+native-stack@6.9.2_@react-navigation+native@6.0.14_react-native-safe-area-c_z7z4m6v7un7nuxpvlatqlwb63q/node_modules/@react-navigation/native-stack/src/index.tsx","webpack:///../../node_modules/.pnpm/@react-navigation+native-stack@6.9.2_@react-navigation+native@6.0.14_react-native-safe-area-c_z7z4m6v7un7nuxpvlatqlwb63q/node_modules/@react-navigation/native-stack/src/navigators/createNativeStackNavigator.tsx","webpack:///../../node_modules/.pnpm/@react-navigation+native-stack@6.9.2_@react-navigation+native@6.0.14_react-native-safe-area-c_z7z4m6v7un7nuxpvlatqlwb63q/node_modules/@react-navigation/native-stack/src/utils/useDismissedRouteError.tsx","webpack:///../../node_modules/.pnpm/@react-navigation+native-stack@6.9.2_@react-navigation+native@6.0.14_react-native-safe-area-c_z7z4m6v7un7nuxpvlatqlwb63q/node_modules/@react-navigation/native-stack/src/utils/useInvalidPreventRemoveError.tsx","webpack:///../../node_modules/.pnpm/@react-navigation+native-stack@6.9.2_@react-navigation+native@6.0.14_react-native-safe-area-c_z7z4m6v7un7nuxpvlatqlwb63q/node_modules/@react-navigation/native-stack/src/views/DebugContainer.native.tsx","webpack:///../../node_modules/.pnpm/@react-navigation+native-stack@6.9.2_@react-navigation+native@6.0.14_react-native-safe-area-c_z7z4m6v7un7nuxpvlatqlwb63q/node_modules/@react-navigation/native-stack/src/views/FontProcessor.native.tsx","webpack:///../../node_modules/.pnpm/@react-navigation+native-stack@6.9.2_@react-navigation+native@6.0.14_react-native-safe-area-c_z7z4m6v7un7nuxpvlatqlwb63q/node_modules/@react-navigation/native-stack/src/views/HeaderConfig.tsx","webpack:///../../node_modules/.pnpm/@react-navigation+native-stack@6.9.2_@react-navigation+native@6.0.14_react-native-safe-area-c_z7z4m6v7un7nuxpvlatqlwb63q/node_modules/@react-navigation/native-stack/src/views/NativeStackView.native.tsx","webpack:///../../node_modules/.pnpm/warn-once@0.1.1/node_modules/warn-once/index.js"],"sourcesContent":["/**\n * Navigators\n */\nexport { default as createNativeStackNavigator } from './navigators/createNativeStackNavigator';\n\n/**\n * Views\n */\nexport { default as NativeStackView } from './views/NativeStackView';\n\n/**\n * Types\n */\nexport type {\n  NativeStackHeaderProps,\n  NativeStackNavigationEventMap,\n  NativeStackNavigationOptions,\n  NativeStackNavigationProp,\n  NativeStackScreenProps,\n} from './types';\n","import {\n  createNavigatorFactory,\n  EventArg,\n  ParamListBase,\n  StackActionHelpers,\n  StackActions,\n  StackNavigationState,\n  StackRouter,\n  StackRouterOptions,\n  useNavigationBuilder,\n} from '@react-navigation/native';\nimport * as React from 'react';\n\nimport type {\n  NativeStackNavigationEventMap,\n  NativeStackNavigationOptions,\n  NativeStackNavigatorProps,\n} from '../types';\nimport NativeStackView from '../views/NativeStackView';\n\nfunction NativeStackNavigator({\n  id,\n  initialRouteName,\n  children,\n  screenListeners,\n  screenOptions,\n  ...rest\n}: NativeStackNavigatorProps) {\n  const { state, descriptors, navigation, NavigationContent } =\n    useNavigationBuilder<\n      StackNavigationState<ParamListBase>,\n      StackRouterOptions,\n      StackActionHelpers<ParamListBase>,\n      NativeStackNavigationOptions,\n      NativeStackNavigationEventMap\n    >(StackRouter, {\n      id,\n      initialRouteName,\n      children,\n      screenListeners,\n      screenOptions,\n    });\n\n  React.useEffect(\n    () =>\n      // @ts-expect-error: there may not be a tab navigator in parent\n      navigation?.addListener?.('tabPress', (e: any) => {\n        const isFocused = navigation.isFocused();\n\n        // Run the operation in the next frame so we're sure all listeners have been run\n        // This is necessary to know if preventDefault() has been called\n        requestAnimationFrame(() => {\n          if (\n            state.index > 0 &&\n            isFocused &&\n            !(e as EventArg<'tabPress', true>).defaultPrevented\n          ) {\n            // When user taps on already focused tab and we're inside the tab,\n            // reset the stack to replicate native behaviour\n            navigation.dispatch({\n              ...StackActions.popToTop(),\n              target: state.key,\n            });\n          }\n        });\n      }),\n    [navigation, state.index, state.key]\n  );\n\n  return (\n    <NavigationContent>\n      <NativeStackView\n        {...rest}\n        state={state}\n        navigation={navigation}\n        descriptors={descriptors}\n      />\n    </NavigationContent>\n  );\n}\n\nexport default createNavigatorFactory<\n  StackNavigationState<ParamListBase>,\n  NativeStackNavigationOptions,\n  NativeStackNavigationEventMap,\n  typeof NativeStackNavigator\n>(NativeStackNavigator);\n","import type {\n  ParamListBase,\n  StackNavigationState,\n} from '@react-navigation/native';\nimport * as React from 'react';\n\nexport default function useInvalidPreventRemoveError(\n  state: StackNavigationState<ParamListBase>\n) {\n  const [nextDismissedKey, setNextDismissedKey] = React.useState<string | null>(\n    null\n  );\n\n  const dismissedRouteName = nextDismissedKey\n    ? state.routes.find((route) => route.key === nextDismissedKey)?.name\n    : null;\n\n  React.useEffect(() => {\n    if (dismissedRouteName) {\n      const message =\n        `The screen '${dismissedRouteName}' was removed natively but didn't get removed from JS state. ` +\n        `This can happen if the action was prevented in a 'beforeRemove' listener, which is not fully supported in native-stack.\\n\\n` +\n        `Consider using a 'usePreventRemove' hook with 'headerBackButtonMenuEnabled: false' to prevent users from natively going back multiple screens.`;\n\n      console.error(message);\n    }\n  }, [dismissedRouteName]);\n\n  return { setNextDismissedKey };\n}\n","import { usePreventRemoveContext } from '@react-navigation/native';\nimport * as React from 'react';\n\nimport type { NativeStackDescriptorMap } from '../types';\n\nexport default function useInvalidPreventRemoveError(\n  descriptors: NativeStackDescriptorMap\n) {\n  const { preventedRoutes } = usePreventRemoveContext();\n  const preventedRouteKey = Object.keys(preventedRoutes)[0];\n  const preventedDescriptor = descriptors[preventedRouteKey];\n  const isHeaderBackButtonMenuEnabledOnPreventedScreen =\n    preventedDescriptor?.options?.headerBackButtonMenuEnabled;\n  const preventedRouteName = preventedDescriptor?.route?.name;\n\n  React.useEffect(() => {\n    if (\n      preventedRouteKey != null &&\n      isHeaderBackButtonMenuEnabledOnPreventedScreen\n    ) {\n      const message =\n        `The screen ${preventedRouteName} uses 'usePreventRemove' hook alongside 'headerBackButtonMenuEnabled: true', which is not supported. \\n\\n` +\n        `Consider removing 'headerBackButtonMenuEnabled: true' from ${preventedRouteName} screen to get rid of this error.`;\n      console.error(message);\n    }\n  }, [\n    preventedRouteKey,\n    isHeaderBackButtonMenuEnabledOnPreventedScreen,\n    preventedRouteName,\n  ]);\n}\n","import * as React from 'react';\nimport { Platform, View, ViewProps } from 'react-native';\n// @ts-ignore Getting private component\nimport AppContainer from 'react-native/Libraries/ReactNative/AppContainer';\nimport type { StackPresentationTypes } from 'react-native-screens';\n\ntype ContainerProps = ViewProps & {\n  stackPresentation: StackPresentationTypes;\n  children: React.ReactNode;\n};\n\nlet Container = View as unknown as React.ComponentType<ContainerProps>;\n\nif (process.env.NODE_ENV !== 'production') {\n  const DebugContainer = (props: ContainerProps) => {\n    const { stackPresentation, ...rest } = props;\n\n    if (Platform.OS === 'ios' && stackPresentation !== 'push') {\n      // This is necessary for LogBox\n      return (\n        <AppContainer>\n          <View {...rest} />\n        </AppContainer>\n      );\n    }\n\n    return <View {...rest} />;\n  };\n\n  Container = DebugContainer;\n}\n\nexport default Container;\n","// @ts-ignore: No declaration available\nimport ReactNativeStyleAttributes from 'react-native/Libraries/Components/View/ReactNativeStyleAttributes';\n\nexport function processFonts(\n  fontFamilies: (string | undefined)[]\n): (string | undefined)[] {\n  // @ts-ignore: React Native types are incorrect here and don't consider fontFamily a style value\n  const fontFamilyProcessor = ReactNativeStyleAttributes.fontFamily?.process;\n  if (typeof fontFamilyProcessor === 'function') {\n    return fontFamilies.map(fontFamilyProcessor);\n  }\n  return fontFamilies;\n}\n","import { getHeaderTitle, HeaderTitle } from '@react-navigation/elements';\nimport { Route, useTheme } from '@react-navigation/native';\nimport * as React from 'react';\nimport {\n  I18nManager,\n  Platform,\n  StyleSheet,\n  TextStyle,\n  View,\n} from 'react-native';\nimport {\n  isSearchBarAvailableForCurrentPlatform,\n  ScreenStackHeaderBackButtonImage,\n  ScreenStackHeaderCenterView,\n  ScreenStackHeaderConfig,\n  ScreenStackHeaderLeftView,\n  ScreenStackHeaderRightView,\n  ScreenStackHeaderSearchBarView,\n  SearchBar,\n} from 'react-native-screens';\n\nimport type { NativeStackNavigationOptions } from '../types';\nimport { processFonts } from './FontProcessor';\n\ntype Props = NativeStackNavigationOptions & {\n  headerTopInsetEnabled: boolean;\n  headerHeight: number;\n  route: Route<string>;\n  canGoBack: boolean;\n};\n\nexport default function HeaderConfig({\n  headerHeight,\n  headerBackImageSource,\n  headerBackButtonMenuEnabled,\n  headerBackTitle,\n  headerBackTitleStyle,\n  headerBackTitleVisible = true,\n  headerBackVisible,\n  headerShadowVisible,\n  headerLargeStyle,\n  headerLargeTitle,\n  headerLargeTitleShadowVisible,\n  headerLargeTitleStyle,\n  headerBackground,\n  headerLeft,\n  headerRight,\n  headerShown,\n  headerStyle,\n  headerBlurEffect,\n  headerTintColor,\n  headerTitle,\n  headerTitleAlign,\n  headerTitleStyle,\n  headerTransparent,\n  headerSearchBarOptions,\n  headerTopInsetEnabled,\n  route,\n  title,\n  canGoBack,\n}: Props): JSX.Element {\n  const { colors } = useTheme();\n  const tintColor =\n    headerTintColor ?? (Platform.OS === 'ios' ? colors.primary : colors.text);\n\n  const headerBackTitleStyleFlattened =\n    StyleSheet.flatten(headerBackTitleStyle) || {};\n  const headerLargeTitleStyleFlattened =\n    StyleSheet.flatten(headerLargeTitleStyle) || {};\n  const headerTitleStyleFlattened = StyleSheet.flatten(headerTitleStyle) || {};\n  const headerStyleFlattened = StyleSheet.flatten(headerStyle) || {};\n  const headerLargeStyleFlattened = StyleSheet.flatten(headerLargeStyle) || {};\n\n  const [backTitleFontFamily, largeTitleFontFamily, titleFontFamily] =\n    processFonts([\n      headerBackTitleStyleFlattened.fontFamily,\n      headerLargeTitleStyleFlattened.fontFamily,\n      headerTitleStyleFlattened.fontFamily,\n    ]);\n\n  const titleText = getHeaderTitle({ title, headerTitle }, route.name);\n  const titleColor =\n    headerTitleStyleFlattened.color ?? headerTintColor ?? colors.text;\n  const titleFontSize = headerTitleStyleFlattened.fontSize;\n  const titleFontWeight = headerTitleStyleFlattened.fontWeight;\n\n  const headerTitleStyleSupported: TextStyle = { color: titleColor };\n\n  if (headerTitleStyleFlattened.fontFamily != null) {\n    headerTitleStyleSupported.fontFamily = headerTitleStyleFlattened.fontFamily;\n  }\n\n  if (titleFontSize != null) {\n    headerTitleStyleSupported.fontSize = titleFontSize;\n  }\n\n  if (titleFontWeight != null) {\n    headerTitleStyleSupported.fontWeight = titleFontWeight;\n  }\n\n  const headerLeftElement = headerLeft?.({\n    tintColor,\n    canGoBack,\n    label: headerBackTitle,\n  });\n  const headerRightElement = headerRight?.({\n    tintColor,\n    canGoBack,\n  });\n  const headerTitleElement =\n    typeof headerTitle === 'function'\n      ? headerTitle({\n          tintColor,\n          children: titleText,\n        })\n      : null;\n\n  const supportsHeaderSearchBar =\n    typeof isSearchBarAvailableForCurrentPlatform === 'boolean'\n      ? isSearchBarAvailableForCurrentPlatform\n      : // Fallback for older versions of react-native-screens\n        Platform.OS === 'ios' && SearchBar != null;\n\n  const hasHeaderSearchBar =\n    supportsHeaderSearchBar && headerSearchBarOptions != null;\n\n  if (headerSearchBarOptions != null && !supportsHeaderSearchBar) {\n    throw new Error(\n      `The current version of 'react-native-screens' doesn't support SearchBar in the header. Please update to the latest version to use this option.`\n    );\n  }\n\n  /**\n   * We need to set this in if:\n   * - Back button should stay visible when `headerLeft` is specified\n   * - If `headerTitle` for Android is specified, so we only need to remove the title and keep the back button\n   */\n  const backButtonInCustomView = headerBackVisible\n    ? headerLeftElement != null\n    : Platform.OS === 'android' && headerTitleElement != null;\n\n  const translucent =\n    headerBackground != null ||\n    headerTransparent ||\n    // When using a SearchBar or large title, the header needs to be translucent for it to work on iOS\n    ((hasHeaderSearchBar || headerLargeTitle) &&\n      Platform.OS === 'ios' &&\n      headerTransparent !== false);\n\n  return (\n    <>\n      {headerBackground != null ? (\n        <View\n          style={[\n            styles.background,\n            headerTransparent ? styles.translucent : null,\n            { height: headerHeight },\n          ]}\n        >\n          {headerBackground()}\n        </View>\n      ) : null}\n      <ScreenStackHeaderConfig\n        backButtonInCustomView={backButtonInCustomView}\n        backgroundColor={\n          headerStyleFlattened.backgroundColor ??\n          (headerBackground != null || headerTransparent\n            ? 'transparent'\n            : colors.card)\n        }\n        backTitle={headerBackTitleVisible ? headerBackTitle : ' '}\n        backTitleFontFamily={backTitleFontFamily}\n        backTitleFontSize={headerBackTitleStyleFlattened.fontSize}\n        blurEffect={headerBlurEffect}\n        color={tintColor}\n        direction={I18nManager.getConstants().isRTL ? 'rtl' : 'ltr'}\n        disableBackButtonMenu={headerBackButtonMenuEnabled === false}\n        hidden={headerShown === false}\n        hideBackButton={headerBackVisible === false}\n        hideShadow={\n          headerShadowVisible === false ||\n          headerBackground != null ||\n          (headerTransparent && headerShadowVisible !== true)\n        }\n        largeTitle={headerLargeTitle}\n        largeTitleBackgroundColor={headerLargeStyleFlattened.backgroundColor}\n        largeTitleColor={headerLargeTitleStyleFlattened.color}\n        largeTitleFontFamily={largeTitleFontFamily}\n        largeTitleFontSize={headerLargeTitleStyleFlattened.fontSize}\n        largeTitleFontWeight={headerLargeTitleStyleFlattened.fontWeight}\n        largeTitleHideShadow={headerLargeTitleShadowVisible === false}\n        title={titleText}\n        titleColor={titleColor}\n        titleFontFamily={titleFontFamily}\n        titleFontSize={titleFontSize}\n        titleFontWeight={titleFontWeight}\n        topInsetEnabled={headerTopInsetEnabled}\n        translucent={\n          // This defaults to `true`, so we can't pass `undefined`\n          translucent === true\n        }\n      >\n        {Platform.OS === 'ios' ? (\n          <>\n            {headerLeftElement != null ? (\n              <ScreenStackHeaderLeftView>\n                {headerLeftElement}\n              </ScreenStackHeaderLeftView>\n            ) : null}\n            {headerTitleElement != null ? (\n              <ScreenStackHeaderCenterView>\n                {headerTitleElement}\n              </ScreenStackHeaderCenterView>\n            ) : null}\n          </>\n        ) : (\n          <>\n            {headerLeftElement != null || typeof headerTitle === 'function' ? (\n              <ScreenStackHeaderLeftView>\n                <View style={styles.row}>\n                  {headerLeftElement}\n                  {headerTitleAlign !== 'center' ? (\n                    typeof headerTitle === 'function' ? (\n                      headerTitleElement\n                    ) : (\n                      <HeaderTitle\n                        tintColor={tintColor}\n                        style={headerTitleStyleSupported}\n                      >\n                        {titleText}\n                      </HeaderTitle>\n                    )\n                  ) : null}\n                </View>\n              </ScreenStackHeaderLeftView>\n            ) : null}\n            {headerTitleAlign === 'center' ? (\n              <ScreenStackHeaderCenterView>\n                {typeof headerTitle === 'function' ? (\n                  headerTitleElement\n                ) : (\n                  <HeaderTitle\n                    tintColor={tintColor}\n                    style={headerTitleStyleSupported}\n                  >\n                    {titleText}\n                  </HeaderTitle>\n                )}\n              </ScreenStackHeaderCenterView>\n            ) : null}\n          </>\n        )}\n        {headerBackImageSource !== undefined ? (\n          <ScreenStackHeaderBackButtonImage source={headerBackImageSource} />\n        ) : null}\n        {headerRightElement != null ? (\n          <ScreenStackHeaderRightView>\n            {headerRightElement}\n          </ScreenStackHeaderRightView>\n        ) : null}\n        {hasHeaderSearchBar ? (\n          <ScreenStackHeaderSearchBarView>\n            <SearchBar {...headerSearchBarOptions} />\n          </ScreenStackHeaderSearchBarView>\n        ) : null}\n      </ScreenStackHeaderConfig>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  row: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  translucent: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    zIndex: 1,\n  },\n  background: {\n    overflow: 'hidden',\n  },\n});\n","import {\n  getDefaultHeaderHeight,\n  getHeaderTitle,\n  HeaderBackContext,\n  HeaderHeightContext,\n  HeaderShownContext,\n  SafeAreaProviderCompat,\n} from '@react-navigation/elements';\nimport {\n  NavigationContext,\n  NavigationRouteContext,\n  ParamListBase,\n  Route,\n  StackActions,\n  StackNavigationState,\n  usePreventRemoveContext,\n  useTheme,\n} from '@react-navigation/native';\nimport * as React from 'react';\nimport { Platform, StyleSheet, View } from 'react-native';\nimport {\n  useSafeAreaFrame,\n  useSafeAreaInsets,\n} from 'react-native-safe-area-context';\nimport type { ScreenProps } from 'react-native-screens';\nimport {\n  Screen,\n  ScreenStack,\n  StackPresentationTypes,\n} from 'react-native-screens';\nimport warnOnce from 'warn-once';\n\nimport type {\n  NativeStackDescriptor,\n  NativeStackDescriptorMap,\n  NativeStackNavigationHelpers,\n  NativeStackNavigationOptions,\n} from '../types';\nimport useDismissedRouteError from '../utils/useDismissedRouteError';\nimport useInvalidPreventRemoveError from '../utils/useInvalidPreventRemoveError';\nimport DebugContainer from './DebugContainer';\nimport HeaderConfig from './HeaderConfig';\n\nconst isAndroid = Platform.OS === 'android';\n\nconst MaybeNestedStack = ({\n  options,\n  route,\n  presentation,\n  headerHeight,\n  headerTopInsetEnabled,\n  children,\n}: {\n  options: NativeStackNavigationOptions;\n  route: Route<string>;\n  presentation: Exclude<StackPresentationTypes, 'push'> | 'card';\n  headerHeight: number;\n  headerTopInsetEnabled: boolean;\n  children: React.ReactNode;\n}) => {\n  const { colors } = useTheme();\n  const { header, headerShown = true, contentStyle } = options;\n\n  const isHeaderInModal = isAndroid\n    ? false\n    : presentation !== 'card' && headerShown === true && header === undefined;\n\n  const headerShownPreviousRef = React.useRef(headerShown);\n\n  React.useEffect(() => {\n    warnOnce(\n      !isAndroid &&\n        presentation !== 'card' &&\n        headerShownPreviousRef.current !== headerShown,\n      `Dynamically changing 'headerShown' in modals will result in remounting the screen and losing all local state. See options for the screen '${route.name}'.`\n    );\n\n    headerShownPreviousRef.current = headerShown;\n  }, [headerShown, presentation, route.name]);\n\n  const content = (\n    <DebugContainer\n      style={[\n        styles.container,\n        presentation !== 'transparentModal' &&\n          presentation !== 'containedTransparentModal' && {\n            backgroundColor: colors.background,\n          },\n        contentStyle,\n      ]}\n      stackPresentation={presentation === 'card' ? 'push' : presentation}\n    >\n      {children}\n    </DebugContainer>\n  );\n\n  if (isHeaderInModal) {\n    return (\n      <ScreenStack style={styles.container}>\n        <Screen enabled style={StyleSheet.absoluteFill}>\n          <HeaderConfig\n            {...options}\n            route={route}\n            headerHeight={headerHeight}\n            headerTopInsetEnabled={headerTopInsetEnabled}\n            canGoBack\n          />\n          {content}\n        </Screen>\n      </ScreenStack>\n    );\n  }\n\n  return content;\n};\n\ntype SceneViewProps = {\n  index: number;\n  focused: boolean;\n  descriptor: NativeStackDescriptor;\n  previousDescriptor?: NativeStackDescriptor;\n  nextDescriptor?: NativeStackDescriptor;\n  onWillDisappear: () => void;\n  onAppear: () => void;\n  onDisappear: () => void;\n  onDismissed: ScreenProps['onDismissed'];\n  onHeaderBackButtonClicked: ScreenProps['onHeaderBackButtonClicked'];\n  onNativeDismissCancelled: ScreenProps['onDismissed'];\n};\n\nconst SceneView = ({\n  index,\n  focused,\n  descriptor,\n  previousDescriptor,\n  nextDescriptor,\n  onWillDisappear,\n  onAppear,\n  onDisappear,\n  onDismissed,\n  onHeaderBackButtonClicked,\n  onNativeDismissCancelled,\n}: SceneViewProps) => {\n  const { route, navigation, options, render } = descriptor;\n  const {\n    animationDuration,\n    animationTypeForReplace = 'push',\n    gestureEnabled,\n    header,\n    headerBackButtonMenuEnabled,\n    headerShown,\n    headerTransparent,\n    autoHideHomeIndicator,\n    navigationBarColor,\n    navigationBarHidden,\n    orientation,\n    statusBarAnimation,\n    statusBarHidden,\n    statusBarStyle,\n    statusBarTranslucent,\n    statusBarColor,\n    freezeOnBlur,\n  } = options;\n\n  let {\n    animation,\n    customAnimationOnGesture,\n    fullScreenGestureEnabled,\n    presentation = 'card',\n    gestureDirection = presentation === 'card' ? 'horizontal' : 'vertical',\n  } = options;\n\n  if (gestureDirection === 'vertical' && Platform.OS === 'ios') {\n    // for `vertical` direction to work, we need to set `fullScreenGestureEnabled` to `true`\n    // so the screen can be dismissed from any point on screen.\n    // `customAnimationOnGesture` needs to be set to `true` so the `animation` set by user can be used,\n    // otherwise `simple_push` will be used.\n    // Also, the default animation for this direction seems to be `slide_from_bottom`.\n    if (fullScreenGestureEnabled === undefined) {\n      fullScreenGestureEnabled = true;\n    }\n    if (customAnimationOnGesture === undefined) {\n      customAnimationOnGesture = true;\n    }\n    if (animation === undefined) {\n      animation = 'slide_from_bottom';\n    }\n  }\n\n  // workaround for rn-screens where gestureDirection has to be set on both\n  // current and previous screen - software-mansion/react-native-screens/pull/1509\n  const nextGestureDirection = nextDescriptor?.options.gestureDirection;\n  const gestureDirectionOverride =\n    nextGestureDirection != null ? nextGestureDirection : gestureDirection;\n\n  if (index === 0) {\n    // first screen should always be treated as `card`, it resolves problems with no header animation\n    // for navigator with first screen as `modal` and the next as `card`\n    presentation = 'card';\n  }\n\n  const insets = useSafeAreaInsets();\n  const frame = useSafeAreaFrame();\n\n  // `modal` and `formSheet` presentations do not take whole screen, so should not take the inset.\n  const isModal = presentation === 'modal' || presentation === 'formSheet';\n\n  // Modals are fullscreen in landscape only on iPhone\n  const isIPhone = Platform.OS === 'ios' && !(Platform.isPad || Platform.isTV);\n  const isLandscape = frame.width > frame.height;\n\n  const isParentHeaderShown = React.useContext(HeaderShownContext);\n  const parentHeaderHeight = React.useContext(HeaderHeightContext);\n  const parentHeaderBack = React.useContext(HeaderBackContext);\n\n  const topInset =\n    isParentHeaderShown ||\n    (Platform.OS === 'ios' && isModal) ||\n    (isIPhone && isLandscape)\n      ? 0\n      : insets.top;\n\n  const { preventedRoutes } = usePreventRemoveContext();\n\n  const defaultHeaderHeight = getDefaultHeaderHeight(frame, isModal, topInset);\n\n  const [customHeaderHeight, setCustomHeaderHeight] =\n    React.useState(defaultHeaderHeight);\n\n  const headerTopInsetEnabled = topInset !== 0;\n  const headerHeight = header ? customHeaderHeight : defaultHeaderHeight;\n  const headerBack = previousDescriptor\n    ? {\n        title: getHeaderTitle(\n          previousDescriptor.options,\n          previousDescriptor.route.name\n        ),\n      }\n    : parentHeaderBack;\n\n  const isRemovePrevented = preventedRoutes[route.key]?.preventRemove;\n\n  return (\n    <Screen\n      key={route.key}\n      enabled\n      style={StyleSheet.absoluteFill}\n      customAnimationOnSwipe={customAnimationOnGesture}\n      fullScreenSwipeEnabled={fullScreenGestureEnabled}\n      gestureEnabled={\n        isAndroid\n          ? // This prop enables handling of system back gestures on Android\n            // Since we handle them in JS side, we disable this\n            false\n          : gestureEnabled\n      }\n      homeIndicatorHidden={autoHideHomeIndicator}\n      navigationBarColor={navigationBarColor}\n      navigationBarHidden={navigationBarHidden}\n      replaceAnimation={animationTypeForReplace}\n      stackPresentation={presentation === 'card' ? 'push' : presentation}\n      stackAnimation={animation}\n      screenOrientation={orientation}\n      statusBarAnimation={statusBarAnimation}\n      statusBarHidden={statusBarHidden}\n      statusBarStyle={statusBarStyle}\n      statusBarColor={statusBarColor}\n      statusBarTranslucent={statusBarTranslucent}\n      swipeDirection={gestureDirectionOverride}\n      transitionDuration={animationDuration}\n      onWillDisappear={onWillDisappear}\n      onAppear={onAppear}\n      onDisappear={onDisappear}\n      onDismissed={onDismissed}\n      isNativeStack\n      nativeBackButtonDismissalEnabled={false} // on Android\n      onHeaderBackButtonClicked={onHeaderBackButtonClicked}\n      // @ts-ignore props not exported from rn-screens\n      preventNativeDismiss={isRemovePrevented} // on iOS\n      onNativeDismissCancelled={onNativeDismissCancelled}\n      // this prop is available since rn-screens 3.16\n      freezeOnBlur={freezeOnBlur}\n    >\n      <NavigationContext.Provider value={navigation}>\n        <NavigationRouteContext.Provider value={route}>\n          <HeaderShownContext.Provider\n            value={isParentHeaderShown || headerShown !== false}\n          >\n            <HeaderHeightContext.Provider\n              value={\n                headerShown !== false ? headerHeight : parentHeaderHeight ?? 0\n              }\n            >\n              {/**\n               * `HeaderConfig` needs to be the direct child of `Screen` without any intermediate `View`\n               * We don't render it conditionally to make it possible to dynamically render a custom `header`\n               * Otherwise dynamically rendering a custom `header` leaves the native header visible\n               *\n               * https://github.com/software-mansion/react-native-screens/blob/main/guides/GUIDE_FOR_LIBRARY_AUTHORS.md#screenstackheaderconfig\n               */}\n              <HeaderConfig\n                {...options}\n                route={route}\n                headerBackButtonMenuEnabled={\n                  isRemovePrevented !== undefined\n                    ? !isRemovePrevented\n                    : headerBackButtonMenuEnabled\n                }\n                headerShown={header !== undefined ? false : headerShown}\n                headerHeight={headerHeight}\n                headerBackTitle={\n                  options.headerBackTitle !== undefined\n                    ? options.headerBackTitle\n                    : undefined\n                }\n                headerTopInsetEnabled={headerTopInsetEnabled}\n                canGoBack={headerBack !== undefined}\n              />\n              <View\n                accessibilityElementsHidden={!focused}\n                importantForAccessibility={\n                  focused ? 'auto' : 'no-hide-descendants'\n                }\n                style={styles.scene}\n              >\n                <MaybeNestedStack\n                  options={options}\n                  route={route}\n                  presentation={presentation}\n                  headerHeight={headerHeight}\n                  headerTopInsetEnabled={headerTopInsetEnabled}\n                >\n                  <HeaderBackContext.Provider value={headerBack}>\n                    {render()}\n                  </HeaderBackContext.Provider>\n                </MaybeNestedStack>\n                {header !== undefined && headerShown !== false ? (\n                  <View\n                    onLayout={(e) => {\n                      setCustomHeaderHeight(e.nativeEvent.layout.height);\n                    }}\n                    style={headerTransparent ? styles.absolute : null}\n                  >\n                    {header({\n                      back: headerBack,\n                      options,\n                      route,\n                      navigation,\n                    })}\n                  </View>\n                ) : null}\n              </View>\n            </HeaderHeightContext.Provider>\n          </HeaderShownContext.Provider>\n        </NavigationRouteContext.Provider>\n      </NavigationContext.Provider>\n    </Screen>\n  );\n};\n\ntype Props = {\n  state: StackNavigationState<ParamListBase>;\n  navigation: NativeStackNavigationHelpers;\n  descriptors: NativeStackDescriptorMap;\n};\n\nfunction NativeStackViewInner({ state, navigation, descriptors }: Props) {\n  const { setNextDismissedKey } = useDismissedRouteError(state);\n\n  useInvalidPreventRemoveError(descriptors);\n\n  return (\n    <ScreenStack style={styles.container}>\n      {state.routes.map((route, index) => {\n        const descriptor = descriptors[route.key];\n        const isFocused = state.index === index;\n        const previousKey = state.routes[index - 1]?.key;\n        const nextKey = state.routes[index + 1]?.key;\n        const previousDescriptor = previousKey\n          ? descriptors[previousKey]\n          : undefined;\n        const nextDescriptor = nextKey ? descriptors[nextKey] : undefined;\n\n        return (\n          <SceneView\n            key={route.key}\n            index={index}\n            focused={isFocused}\n            descriptor={descriptor}\n            previousDescriptor={previousDescriptor}\n            nextDescriptor={nextDescriptor}\n            onWillDisappear={() => {\n              navigation.emit({\n                type: 'transitionStart',\n                data: { closing: true },\n                target: route.key,\n              });\n            }}\n            onAppear={() => {\n              navigation.emit({\n                type: 'transitionEnd',\n                data: { closing: false },\n                target: route.key,\n              });\n            }}\n            onDisappear={() => {\n              navigation.emit({\n                type: 'transitionEnd',\n                data: { closing: true },\n                target: route.key,\n              });\n            }}\n            onDismissed={(event) => {\n              navigation.dispatch({\n                ...StackActions.pop(event.nativeEvent.dismissCount),\n                source: route.key,\n                target: state.key,\n              });\n\n              setNextDismissedKey(route.key);\n            }}\n            onHeaderBackButtonClicked={() => {\n              navigation.dispatch({\n                ...StackActions.pop(),\n                source: route.key,\n                target: state.key,\n              });\n            }}\n            onNativeDismissCancelled={(event) => {\n              navigation.dispatch({\n                ...StackActions.pop(event.nativeEvent.dismissCount),\n                source: route.key,\n                target: state.key,\n              });\n            }}\n          />\n        );\n      })}\n    </ScreenStack>\n  );\n}\n\nexport default function NativeStackView(props: Props) {\n  return (\n    <SafeAreaProviderCompat>\n      <NativeStackViewInner {...props} />\n    </SafeAreaProviderCompat>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  scene: {\n    flex: 1,\n    flexDirection: 'column-reverse',\n  },\n  absolute: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n  },\n});\n","const DEV = process.env.NODE_ENV !== \"production\";\n\nconst warnings = new Set();\n\nfunction warnOnce(condition, ...rest) {\n  if (DEV && condition) {\n    const key = rest.join(\" \");\n\n    if (warnings.has(key)) {\n      return;\n    }\n\n    warnings.add(key);\n    console.warn(...rest);\n  }\n}\n\nmodule.exports = warnOnce;\n"],"names":["_createNativeStackNavigator","_interopRequireDefault","require","_NativeStackView","_native","React","obj","nodeInterop","__esModule","default","cache","_getRequireWildcardCache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_interopRequireWildcard","_jsxRuntime","_excluded","WeakMap","cacheBabelInterop","cacheNodeInterop","exports","createNavigatorFactory","_ref","id","initialRouteName","children","screenListeners","screenOptions","rest","_objectWithoutProperties2","_useNavigationBuilder","useNavigationBuilder","StackRouter","state","descriptors","navigation","NavigationContent","useEffect","addListener","e","isFocused","requestAnimationFrame","index","defaultPrevented","dispatch","assign","StackActions","popToTop","target","jsx","_state$routes$find","_React$useState","useState","_React$useState2","_slicedToArray2","nextDismissedKey","setNextDismissedKey","dismissedRouteName","routes","find","route","name","message","console","error","_preventedDescriptor$","_preventedDescriptor$2","preventedRoutes","usePreventRemoveContext","preventedRouteKey","keys","preventedDescriptor","isHeaderBackButtonMenuEnabledOnPreventedScreen","options","headerBackButtonMenuEnabled","preventedRouteName","_reactNative","Container","View","fontFamilies","_ReactNativeStyleAttr","fontFamilyProcessor","ReactNativeStyleAttributes","fontFamily","process","map","_ReactNativeStyleAttributes","_ref2","_headerTitleStyleFlat","_headerStyleFlattened","headerHeight","headerBackImageSource","headerBackTitle","headerBackTitleStyle","_ref$headerBackTitleV","headerBackTitleVisible","headerBackVisible","headerShadowVisible","headerLargeStyle","headerLargeTitle","headerLargeTitleShadowVisible","headerLargeTitleStyle","headerBackground","headerLeft","headerRight","headerShown","headerStyle","headerBlurEffect","headerTintColor","headerTitle","headerTitleAlign","headerTitleStyle","headerTransparent","headerSearchBarOptions","headerTopInsetEnabled","title","canGoBack","colors","useTheme","tintColor","Platform","OS","primary","text","headerBackTitleStyleFlattened","StyleSheet","flatten","headerLargeTitleStyleFlattened","headerTitleStyleFlattened","headerStyleFlattened","headerLargeStyleFlattened","_processFonts","processFonts","_processFonts2","backTitleFontFamily","largeTitleFontFamily","titleFontFamily","titleText","getHeaderTitle","titleColor","color","titleFontSize","fontSize","titleFontWeight","fontWeight","headerTitleStyleSupported","headerLeftElement","label","headerRightElement","headerTitleElement","supportsHeaderSearchBar","isSearchBarAvailableForCurrentPlatform","SearchBar","hasHeaderSearchBar","Error","backButtonInCustomView","translucent","jsxs","Fragment","style","styles","background","height","_reactNativeScreens","ScreenStackHeaderConfig","backgroundColor","card","backTitle","backTitleFontSize","blurEffect","direction","I18nManager","getConstants","isRTL","disableBackButtonMenu","hidden","hideBackButton","hideShadow","largeTitle","largeTitleBackgroundColor","largeTitleColor","largeTitleFontSize","largeTitleFontWeight","largeTitleHideShadow","topInsetEnabled","ScreenStackHeaderLeftView","ScreenStackHeaderCenterView","row","_elements","HeaderTitle","undefined","ScreenStackHeaderBackButtonImage","source","ScreenStackHeaderRightView","ScreenStackHeaderSearchBarView","_FontProcessor","create","flexDirection","alignItems","position","top","left","right","zIndex","overflow","props","SafeAreaProviderCompat","NativeStackViewInner","_reactNativeSafeAreaContext","_warnOnce","_useDismissedRouteError","_useInvalidPreventRemoveError","_DebugContainer","_HeaderConfig","isAndroid","MaybeNestedStack","presentation","header","_options$headerShown","contentStyle","isHeaderInModal","headerShownPreviousRef","useRef","warnOnce","current","content","container","stackPresentation","ScreenStack","Screen","enabled","absoluteFill","SceneView","_preventedRoutes$rout","focused","descriptor","previousDescriptor","nextDescriptor","onWillDisappear","onAppear","onDisappear","onDismissed","onHeaderBackButtonClicked","onNativeDismissCancelled","render","animationDuration","_options$animationTyp","animationTypeForReplace","gestureEnabled","autoHideHomeIndicator","navigationBarColor","navigationBarHidden","orientation","statusBarAnimation","statusBarHidden","statusBarStyle","statusBarTranslucent","statusBarColor","freezeOnBlur","animation","customAnimationOnGesture","fullScreenGestureEnabled","_options$presentation","_options$gestureDirec","gestureDirection","nextGestureDirection","gestureDirectionOverride","insets","useSafeAreaInsets","frame","useSafeAreaFrame","isModal","isIPhone","isPad","isTV","isLandscape","width","isParentHeaderShown","useContext","HeaderShownContext","parentHeaderHeight","HeaderHeightContext","parentHeaderBack","HeaderBackContext","topInset","defaultHeaderHeight","getDefaultHeaderHeight","customHeaderHeight","setCustomHeaderHeight","headerBack","isRemovePrevented","preventRemove","customAnimationOnSwipe","fullScreenSwipeEnabled","homeIndicatorHidden","replaceAnimation","stackAnimation","screenOrientation","swipeDirection","transitionDuration","isNativeStack","nativeBackButtonDismissalEnabled","preventNativeDismiss","NavigationContext","Provider","value","NavigationRouteContext","accessibilityElementsHidden","importantForAccessibility","scene","onLayout","nativeEvent","layout","absolute","back","_ref3","useDismissedRouteError","useInvalidPreventRemoveError","_state$routes","_state$routes2","previousKey","nextKey","emit","type","data","closing","event","pop","dismissCount","flex","Set","module","condition"],"sourceRoot":""}